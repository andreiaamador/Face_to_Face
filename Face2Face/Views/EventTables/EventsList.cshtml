@model IEnumerable<Face2Face.Models.EventTable>

<style>
    .ProfileBar {
        border: solid;
        border-color: black;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .ownProfile {
        padding-top: 10px;
        text-align: center;
    }

    select {
        padding-right: 5px;
        margin: 5px;
        border-radius: 10px;
        width: 140px;
        height: 25px;
        color: black;
    }

    .fa:hover {
        cursor: pointer;
    }

    #filters {
        text-align: left;
    }

        #filters input {
            margin: 5px;
            border-radius: 10px;
            width: 140px;
            color: black;
        }

    .location:hover, .date:hover, .language:hover, .keyWord:hover {
        cursor: pointer;
    }

    .profile1 input, .profile1 button {
        border-radius: 10px;
        width: 140px;
    }

    #btn input {
        border-radius: 10px;
        width: 140px;
        margin-bottom: 5px;
        margin-top: 7px;
    }

    .profile1 input:hover, .profile1 button:hover {
        opacity: 0.8;
    }

    .event {
        border: solid;
        border-color: black;
        border-radius: 5px;
        margin-right: 0px;
        margin-bottom: 10px;
        /*padding: 10px;*/
    }

    #eventImg:hover {
        opacity: 0.8;
        text-decoration: none;
    }

    .event img {
        height: 100PX;
        width: 100PX;
        margin: 10px;
    }

    .event p {
        margin: 0px;
    }

    .event .title {
        font-size: 20px;
        font-weight: bold;
    }

    .event .review {
        font-size: 15px;
        font-weight: bold;
    }


    #eventPhoto {
        text-align: center;
        vertical-align: middle;
        position: relative;
    }

    #btn {
        text-align: center;
        margin: 5px;
    }

        #btn:hover {
            opacity: 0.8;
        }

    #filterHr {
        border-top: 1px solid black;
    }
</style>

@*<h2>EventsList</h2>*@

<div class="container-fluid">

    <div class="row">

        <div class="col-md-3 ProfileBar">
            <div>
                <div class="ownProfile">

                    <div>
                        @Html.Action("GetOwnProfile", "UserProfiles")
                    </div>

                    <div class="profile1">

                        <div>
                            <p>
                                @using (Ajax.BeginForm("MyOwnEvents", "EventTables", new AjaxOptions
                                {//GetPatients is name of method in PatientController
                                    HttpMethod = "POST",
                                    InsertionMode = InsertionMode.Replace, //target element(#targetRev) will be replaced
                                    UpdateTargetId = "targetRv"
                                    //LoadingElementId = "loader"
                                }))
                                {
                                <div>
                                    <input type="submit" value="My own events">
                                </div>
                                }
                                @*@Html.ActionLink("My Own events", "MyOwnEvents", "EventTables")*@
                            </p>
                            <p>
                                @using (Ajax.BeginForm("MyNextEvents", "EventTables", new AjaxOptions
                                {//GetPatients is name of method in PatientController
                                    HttpMethod = "POST",
                                    InsertionMode = InsertionMode.Replace, //target element(#targetRev) will be replaced
                                    UpdateTargetId = "targetRv"
                                    //LoadingElementId = "loader"
                                }))
                                {
                                <div>
                                    <input type="submit" value="My Events">
                                </div>
                                }
                                @*@Html.ActionLink("Next Events", "NextEvents", "EventTables")*@

                            </p>
                            <p>
                                <button onclick="location.href='@Url.Action("Create", "EventTables")';return false;">Create new Event</button>
                            </p>
                        </div>

                    </div>

                    <hr id="filterHr" />

                    <div>
                        @using (Ajax.BeginForm("Filter", "EventTables", new AjaxOptions
                        {//GetPatients is name of method in PatientController
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.Replace, //target element(#targetRev) will be replaced
                            UpdateTargetId = "targetRv"
                            //LoadingElementId = "loader"
                        }))

                        {
                        <div id="filters">
                            <div class="location">
                                <i class="fa fa-plus-square " aria-hidden="true"> </i>
                                <i class="fa fa-minus-square hidden" aria-hidden="true"></i>
                                Location:
                                <div class="input hidden">
                                    <input id="location" type="text" name="Location">
                                </div>
                            </div>

                            <div class="date">
                                <i class="fa fa-plus-square date" aria-hidden="true"> </i>
                                <i class="fa fa-minus-square date hidden" aria-hidden="true"></i>
                                Date:
                                <div class="input hidden">
                                    <input class="datefield" data-val="true" data-val-required="Date is required"
                                           id="ReleaseDate" name="Date" type="Date" value="1/11/1989" />
                                </div>
                            </div>

                            <div class="language">
                                <i class="fa fa-plus-square " aria-hidden="true"> </i>
                                <i class="fa fa-minus-square hidden" aria-hidden="true"></i>
                                Language:
                                <div class="input hidden">
                                    @*@Html.Action("selectLanguage", "Languagestables")*@
                                    <select id="language" name="Language">
                                        <option>--Select--</option>
                                        @foreach (var item in ViewBag.allLanguages)
                                            {
                                        <option>@item</option>
                                            }
                                    </select>

                                </div>
                            </div>
                            <div class="keyWord">
                                <i class="fa fa-plus-square " aria-hidden="true"> </i>
                                <i class="fa fa-minus-square hidden" aria-hidden="true"></i>
                                KeyWord:
                                <div class="input hidden">
                                    <input id="keyWord" type="text" name="keyWord">
                                </div>
                            </div>
                        </div>
                        <div id="btn">
                            <input type="submit" value="Search">
                        </div>


                        }
                    </div>
                </div>
            </div>

            <a Id="filtersIcon">Search Filters</a>
            <i class="fa fa-search-minus search" aria-hidden="true"></i>
            <i class="fa fa-search-plus search hidden" aria-hidden="true"></i>
        </div>

        @*eventTable*@
        <div id="targetRv" class="col-md-9 ">
            @Html.Action("GetAllEventsList", "EventTables")
        </div>


    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDLoHWUHxcm9rYz8oopNSnvWIznoUpdaKo&libraries=places&callback=initMap"
        async defer></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
       
        //function initMap() {

        //    if (navigator.geolocation) {
        //        navigator.geolocation.getCurrentPosition(function (position) {

        //            var lat = position.coords.latitude;
        //            var lng = position.coords.longitude;

        //            $("#yes").val(lat);
        //            $("#yes").text(lat);
        //            codeLatLng(lat, lng);
        //            //infoWindow.setPosition(pos);
        //            //infoWindow.setContent('Location found.');
        //            //map.setCenter(pos);
        //        }, function () {
        //            //handleLocationError(true, infoWindow, map.getCenter());
        //        });
        //    } else {
        //        // Browser doesn't support Geolocation
        //        //handleLocationError(false, infoWindow, map.getCenter());
        //    }
        //}

        function codeLatLng(lat, lng) {
 
            var latlng = new google.maps.LatLng(lat, lng);

            geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                console.log("okok");
                if (status == google.maps.GeocoderStatus.OK) {
                 
                    console.log(results)
                    if (results[1]) {
                        //formatted address
                        alert(results[0].formatted_address)
                        //find country name
                        for (var i = 0; i < results[0].address_components.length; i++) {
                            for (var b = 0; b < results[0].address_components[i].types.length; b++) {

                                //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                                if (results[0].address_components[i].types[b] == "administrative_area_level_1") {
                                    //this is the object you are looking for
                                    city = results[0].address_components[i];
                                  
                                    break;
                                }
                            }
                        }
                        //city data
                        alert(city.short_name + " " + city.long_name)


                    } else {
                        alert("No results found");
                    }
                } else {
                    alert("Geocoder failed due to: " + status);
              
                }
            });
        }



        $(".search").click(function () {

            if ($("#filters").hasClass("hidden")) {
                $("#filters").removeClass("hidden");
                $("#filterHr").removeClass("hidden");
                $("#btn").removeClass("hidden");
                $(".profile1").removeClass("hidden");
            }
            else {
                $("#filters").addClass("hidden");
                $("#filterHr").addClass("hidden");
                $("#btn").addClass("hidden");
                $(".profile1").addClass("hidden");
            }
            $(".fa.search").removeClass("hidden");
            $(this).addClass("hidden");
        });

        $(".location i").click(function () {

            if ($(".location .input").hasClass("hidden")) {
                $(".location .input").removeClass("hidden");
            }
            else {
                $(".location .input").addClass("hidden");
                $("#location").val('');

            }
            $(".location i").removeClass("hidden");
            $(this).addClass("hidden");
        });

        $(".date i").click(function () {

            if ($(".date .input").hasClass("hidden")) {
                $(".date .input").removeClass("hidden");
            }
            else {
                $(".date .input").addClass("hidden");
                $("#ReleaseDate").val('');
            }

            $(".date i").removeClass("hidden");
            $(this).addClass("hidden");
        });

        $(".language i").click(function () {
            if ($(".language .input").hasClass("hidden")) {
                $(".language .input").removeClass("hidden");
            }

            else {
                $(".language .input").addClass("hidden");
                $("#language").prop("selected", false)
                $("#language").val('');
            }

            $(".language  i").removeClass("hidden");
            $(this).addClass("hidden");
        });

        $(".keyWord i").click(function () {
            if ($(".keyWord .input").hasClass("hidden")) {
                $(".keyWord .input").removeClass("hidden");
            }

            else {
                $(".keyWord .input").addClass("hidden");
                $("#keyWord").val('');
            }

            $(".keyWord i").removeClass("hidden");
            $(this).addClass("hidden");
        });

    </script>
}
