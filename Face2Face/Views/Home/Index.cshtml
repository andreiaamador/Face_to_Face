@using Face2Face.Models
@model LoginViewModel

<style>

    #logins {
    border:solid;
    border-radius:5px;
    border-color:black;
    padding:10px;
    }

    #intro {
        background: none;
        padding-right: 30px;
     
    }

    #btn {
    background-color:forestgreen;
    border:10px;
    color:white;
    width:280px;
    }

</style>

<div class="row">
    <div  class="col-md-7">
        <div id="intro"align="justify">
            <h2>Face To Face</h2>

            <p>
                ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
                enables a clean separation of concerns and gives you full control over markup
                for enjoyable, agile development.
            </p>

        </div>

    </div>
    <div id="logins" class="col-md-5">

        <div align="justify">
            <div class="row">
                <div class="col-md-12">
                    <section id="loginForm">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                            @Html.AntiForgeryToken()

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        @Html.LabelFor(m => m.RememberMe)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="btn" type="submit" value="Log in" class="btn btn-default" />
                                </div>
                            </div>
                            <p>
                                @Html.ActionLink("Register as a new user", "Register", "Account")
                            </p>
                            @* Enable this once you have account confirmation enabled for password reset functionality
                                <p>
                                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                                </p>*@
                        }
                    </section>
                </div>

            </div>
            <div class="row">


                <div class="col-md-12">

                    <section id="socialLoginForm">
              

                        @Html.Partial("../Account/_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })

                        @*"_ExternalLoginsListPartial"*@
                    </section>
                </div>
            </div>


        </div>
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

